generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserLevel {
  USER
  ADMIN
}

model User {
  id              String   @id @default(uuid()) @db.Uuid
  name            String
  email           String   @unique
  password        String
  phone           String?
  avatar          String?
  avatar_media_id String?
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  UserLevel UserLevel @default(USER)
  Order     Order[]
  Product   Product[]

  @@index([email, id])
}

model Product {
  id               String    @id @default(uuid()) @db.Uuid
  product_name     String
  slug             String    @unique
  description      String
  price            Float
  product_image    String?
  product_image_id String?
  created_at       DateTime  @default(now())
  deleted_at       DateTime?

  created_by_id String      @default(uuid()) @db.Uuid
  OrderItem     OrderItem[]
  Stock         Stock?
  User          User?       @relation(fields: [userId], references: [id])
  userId        String?     @db.Uuid

  @@index([slug, id])
}

enum StockType {
  OUT_SALES
  IN_SALES
  RETUR
}

model StockHistory {
  id          String    @id @default(uuid()) @db.Uuid
  stock_id    String    @unique @db.Uuid
  type        StockType
  notes       String?
  amount      Int
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  external_id String?

  Stock Stock @relation(fields: [stock_id], references: [id])

  @@index([stock_id])
}

model Stock {
  id         String   @id @default(uuid()) @db.Uuid
  product_id String   @unique @db.Uuid
  stock      Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Product      Product        @relation(fields: [product_id], references: [id])
  StockHistory StockHistory[]

  @@index([product_id])
}

enum OrderStatus {
  PENDING
  SUCCESS
  CANCEL
}

model Order {
  id           String   @id @default(uuid()) @db.Uuid
  user_id      String
  order_number String   @unique
  amount       Float
  notes        String?
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  status_id    String

  User        User        @relation(fields: [user_id], references: [id])
  OrderStatus OrderStatus @default(PENDING)
  OrderItem   OrderItem[]
  Payment     Payment?
  Shipping    Shipping?

  @@index([order_number, id, user_id])
}

model OrderItem {
  id            String   @id @default(uuid()) @db.Uuid
  order_id      String
  product_id    String
  amount        Float
  price_product Float
  qty           Int
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  Order   Order   @relation(fields: [order_id], references: [id])
  Product Product @relation(fields: [product_id], references: [id])

  @@index([order_id, id])
}

enum ShippingStatus {
  PENDING
  SUCCESS
  CANCEL
}

model Shipping {
  id              String   @id @default(uuid()) @db.Uuid
  order_id        String   @unique
  receive_address String
  receive_email   String
  receive_name    String
  receive_phone   String
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  status_id       String

  Order          Order          @relation(fields: [order_id], references: [id])
  ShippingStatus ShippingStatus @default(PENDING)

  @@index([order_id, id, ShippingStatus])
}

enum PaymentStatus {
  PENDING
  FAILED
  SUCCESS
  CANCEL
  UNPAID
  PAID
  REFUND
}

enum PaymenMethod {
  CREDIT
  BANK
  EWALLET
  CASH
}

model Payment {
  id                     String   @id @default(uuid())
  order_id               String   @unique
  amount                 Float
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt
  notes                  String?
  payment_image          String?
  payment_image_media_id String?

  Order         Order         @relation(fields: [order_id], references: [id])
  PaymentStatus PaymentStatus @default(UNPAID)
  PaymenMethod  PaymenMethod  @default(BANK)

  @@index([order_id, id, PaymentStatus])
}
